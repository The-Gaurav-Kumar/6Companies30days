bool isValid(int x,int y,int m,int n)
    {
        if(x<m&&y<n&&x>=0&&y>=0)
            return true;
        return false;
    }
    int orangesRotting(vector<vector<int>>& grid) {
        int count=0;
        queue<pair<int,int>> q;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({i,j});
                }
            }
        }
                    while(!q.empty())
                    {
                        int ss=q.size();
                        while(ss--)
                        {
                            int x=q.front().first;
                            int y=q.front().second;
                                
                            if((isValid(x-1,y,n,m))&&(grid[x-1][y]==1))
                            {
                                grid[x-1][y]=2;
                                q.push({x-1,y});
                            }
                            if((isValid(x,y-1,n,m))&&(grid[x][y-1]==1))
                            {
                                grid[x][y-1]=2;
                                q.push({x,y-1});
                            }
                            if((isValid(x+1,y,n,m))&&(grid[x+1][y]==1))
                            {
                                grid[x+1][y]=2;
                                q.push({x+1,y});
                            }
                           if((isValid(x,y+1,n,m))&&(grid[x][y+1]==1)){
                                grid[x][y+1]=2;
                                q.push({x,y+1});
                            }
                            q.pop();
                        }
                        count++;
                    }
                    for(int i=0;i<n;i++)
                    {
                        for(int j=0;j<m;j++)
                        {
                            if(grid[i][j]==1)
                                return -1;
                        }
                    }
                    if(count>0)
                    return count-1;
                    else
                        return 0;
    }
