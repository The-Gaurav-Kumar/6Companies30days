 vector<vector<int> > fourSum(vector<int> &nums, int target) {
        vector<vector<int>> ans;
        vector<int> v;
        sort(nums.begin(),nums.end());
        
        int n=nums.size();
        
        for(int i=0;i<n-3;)
        {
            int curr4=nums[i];
            for(int j=i+1;j<n-2;)
            {
                int curr3=nums[j];
                int k=j+1;
                int l=n-1;
                while(k<l)
                {
                    long long int sum=(long long int)nums[i]+(long long int)nums[j]+(long long int)nums[k]+(long long int)nums[l];
                    int curr=nums[k],curr2=nums[l];
                    if(sum==target)
                    {
                        v.push_back(nums[i]);
                        v.push_back(nums[j]);
                        v.push_back(nums[k]);
                        v.push_back(nums[l]);
                        ans.push_back(v);
                        v.clear();
                    
                        while((k<l)&&(nums[k]==curr))
                            k++;
                        while((l>k)&&(nums[l]==curr2))
                            l--;
                    }
                    else if(sum<target)
                    {
                        while((l>k)&&(nums[k]==curr))
                            k++;
                    }
                    else if(sum>target)
                    {
                        while((l>k)&&(nums[l]==curr2))
                            l--;
                    }
                }
                while((j<n-2)&&(nums[j]==curr3))
                    j++;
            }
             while((i<n-3)&&(nums[i]==curr4))
                    i++;
        }
        return ans;
    }
