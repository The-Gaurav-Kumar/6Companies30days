int vis[10001];
    string aans="";
	void dfs(int node,stack<int> &st, vector<int> *adj)
	{
	    vis[node]=1;
	    for(int child: adj[node])
	    {
	        if(!vis[child])
	        {
	            dfs(child,st,adj);
	        }
	    }
	    st.push(node);
	}
	void topoSort(int V, vector<int> *adj) 
	{
	    for(int i=0;i<V;i++)
	        vis[i]=0;
	       stack<int> st;
	    for(int i=0;i<V;i++)
	    {
	        if(!vis[i])
	            dfs(i,st,adj);
	    }
	    vector<int> v;
	    while(!st.empty())
	    {
	        v.push_back(st.top());
	        st.pop();
	    }
	    for(int i=0;i<v.size();i++)
	        aans+=(char)(v[i]+97);
	}
    string findOrder(string dict[], int N, int K) {
        vector<int> arr[K];
        for(int i=0;i<N-1;i++)
        {
            int n=dict[i].length();
            int m=dict[i+1].length();
            int mn=min(n,m);
            for(int j=0;j<mn;j++)
            {
                if(dict[i][j]!=dict[i+1][j])
                {
                    //cout<<dict[i][j]<<" "<<dict[i+1][j]<<endl;
                    arr[dict[i][j]-97].push_back(dict[i+1][j]-97);
                    break;
                }
            }
        }
       
        topoSort(K,arr);
        return aans;
        //code here
    }
