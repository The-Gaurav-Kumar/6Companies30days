class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        long long int pro=1,ans=0,start=0,end=0,N;
        for(int i=0;i<n;i++)
        {
            pro=pro*a[i];
            if(pro>=k)
            {
                if((start<=end)&&(start!=0))
                {
                    N=end-start+1;
                    ans-=(N*(N+1))/2;
                }
                end=i-1;
                if(end>=start){
                N=end-start+1;
                ans+=(N*(N+1))/2;
                }
                while((start<n)&&(pro>=k))
                {
                    pro=pro/a[start];
                    start++;
                }
            }
        }
                if((start<=end)&&(start!=0))
                {
                    N=end-start+1;
                    ans-=(N*(N+1))/2;
                }
                end=n-1;
                N=end-start+1;
                ans+=(N*(N+1))/2;
        return ans;
    }
