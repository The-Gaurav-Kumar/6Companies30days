string encode(string src)
    {    
        char ch=src[0];
        int count=1;
        string ans="";
        for(int i=1;i<src.length();i++)
        {
            if(ch==src[i])
                count++;
            else
            {
                ans+=ch+to_string(count);
                ch=src[i];
                count=1;
            }
        }
        ans+=ch+to_string(count);
        return ans;
    }
    
    string printMinNumberForPattern(string s){
        string k=encode(s);
        //cout<<k<<endl;
        string ans="";
        int i=0;
        int arr[10]={0};
        int t=k.length();
        int count=0;
        while(i<t)
        {
            if(k[i]=='I')
            {
                count=0;
                 if(i==0)
                    count++;
                count+=k[i+1]-48;
                for(int j=1;j<=9;j++)
                {
                    if(arr[j]==0)
                    {
                        if(((i+2)<t)&&(k[i+2]=='D')&&(count==1))
                        {
                            int temp=k[i+3]-48+j;
                            ans+=to_string(temp);
                            arr[temp]=1;
                        }
                        else{
                        ans+=to_string(j);
                        arr[j]=1;
                        }
                        count--;
                    }
                    if(count==0)
                        break;
                }
                i+=2;
            }
            else
            {
                count=0;
                count+=k[i+1]-48;
                     if(i==0)
                        count++;
                    
                
                for(int j=1;j<=9;j++)
                {
                    if(arr[j]==0)
                    {
                        count--;
                    }
                    if(count==0)
                    {
                        while((arr[j]==0)&&(j>0)){
                            ans+=to_string(j);
                            arr[j]=1;
                            j--;
                        }
                         break;
                    }
                }
                  i+=2;
            }
        } 
            
       
       
        return ans;
    }
